{"version":3,"sources":["Filter.js","services/persons.js","PersonForm.js","Persons.js","Notification.js","Error.js","App.js","index.js"],"names":["Filter","filterName","setFilter","className","value","onChange","event","target","baseUrl","axios","get","then","response","data","newPerson","post","personId","delete","id","updatedPerson","put","PersonForm","persons","setPersons","newName","setNewName","newPhoneNumber","setNewPhoneNumber","setNotificationMessage","setErrorMessage","onSubmit","preventDefault","personObject","name","number","some","p","window","confirm","currentPerson","find","personService","returnedPerson","map","catch","error","setTimeout","concat","includes","type","Persons","filter","person","toLowerCase","onClick","deleteIdValue","deletePersonName","Notification","message","Error","App","useState","notificationMessage","errorMessage","useEffect","console","log","initialPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0091e994.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({filterName, setFilter}) => {\r\n    const handleFilterByName = (event) => {\r\n        setFilter(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"filterContainer\">\r\n            Filter by name: <input value={filterName} onChange={handleFilterByName} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAllPersons = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst createPerson = newPerson => {\r\n  return axios.post(baseUrl, newPerson)\r\n}\r\n\r\nconst deletePerson = personId => {\r\n  return axios.delete(`${baseUrl}/${personId}`)\r\n}\r\n\r\nconst updatePerson = (id, updatedPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, updatedPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAllPersons, \r\n  createPerson,\r\n  deletePerson,\r\n  updatePerson\r\n}","import React from 'react'\r\nimport personService from './services/persons'\r\n\r\nconst PersonForm = ({persons, setPersons, newName, setNewName, newPhoneNumber, setNewPhoneNumber, setNotificationMessage, setErrorMessage}) => {\r\n\r\n    const addPerson = (event) => {\r\n      event.preventDefault()\r\n      const personObject = {\r\n        name: newName,\r\n        number: newPhoneNumber\r\n      }\r\n\r\n      if (persons.some(p => p.name === newName)) {\r\n        if (window.confirm(`${newName} is already in the phonebook, replace the old number with a new one?`)) {\r\n          const currentPerson = persons.find(p=> p.name === newName);\r\n          const updatedPerson = { ...currentPerson, number: newPhoneNumber }\r\n\r\n          personService\r\n            .updatePerson(currentPerson.id, updatedPerson)\r\n            .then(returnedPerson => {\r\n              setPersons(persons.map(p => p.id !== currentPerson.id ? p : returnedPerson))\r\n            })\r\n            .catch(error => {\r\n              setErrorMessage(\r\n                `${updatedPerson.name} was already deleted from the server!`\r\n              )\r\n              setTimeout(() => {\r\n                setErrorMessage(null)\r\n              }, 5000)\r\n            })\r\n            \r\n\r\n          return;  \r\n        }\r\n        else {\r\n          return;\r\n        }\r\n      } else {\r\n        setNewName(event.target.value);\r\n      }\r\n\r\n      personService\r\n        .createPerson(personObject)\r\n        .then(response => {\r\n          setNotificationMessage(\r\n            `Added ${personObject.name}`\r\n          )\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n          }, 5000)\r\n          setPersons(persons.concat(response.data));\r\n          setNewName('');\r\n          setNewPhoneNumber('');\r\n        })\r\n        .catch(error => {\r\n          if ((error.response.data.error).includes('name')) {\r\n            setErrorMessage(\r\n              'Name is too short, required length is at least 3 characters!'\r\n            )\r\n          }\r\n          if ((error.response.data.error).includes('number')) {\r\n            setErrorMessage(\r\n              'Number is too short, required length is at least 8 characters!'\r\n            )\r\n          }\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n    \r\n    const handlePersonNameChange = (event) => {\r\n        setNewName(event.target.value);\r\n    }\r\n    \r\n    const handlePersonNumberChange = (event) => {\r\n        setNewPhoneNumber(event.target.value);\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={addPerson}> \r\n          <div className=\"personInputForm\">\r\n            Name: <input value={newName || ''} onChange={handlePersonNameChange}/>\r\n            <br></br>\r\n            Number: <input value={newPhoneNumber || ''} onChange={handlePersonNumberChange}/>\r\n            </div>\r\n            <div>\r\n            <button className=\"addPersonBtn\" type=\"submit\">Add</button>\r\n          </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\nimport personService from './services/persons'\r\n\r\nconst Persons = ({persons, setPersons, filterName}) => {\r\n\r\n    const onClick = (deleteIdValue, deletePersonName) => {\r\n        personService\r\n            .deletePerson(deleteIdValue)\r\n            .then(() => {\r\n                if (window.confirm(`Delete ${deletePersonName}?`)) {\r\n                    setPersons(persons.filter(person => person.id !== deleteIdValue))\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"personListContainer\">\r\n            <ul>\r\n                {persons.filter(person => \r\n                    person.name.toLowerCase()\r\n                    .includes(filterName.toLowerCase()) || filterName === '')\r\n                    .map(person => \r\n                    <div key={person.id} className=\"personRow\">\r\n                        <p><strong>{person.name}</strong></p>\r\n                        <p className=\"personNumber\">{person.number}</p>\r\n                        <button className=\"deleteBtn\" type=\"button\" \r\n                                onClick={() => onClick(person.id, person.name)}>Delete\r\n                        </button>       \r\n                    </div>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"notification\">\r\n        {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Error = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n        {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport Notification from './Notification'\nimport Error from './Error'\nimport personService from './services/persons'\nimport './App.css' \n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newPhoneNumber, setNewPhoneNumber ] = useState('')\n  const [ filterName, setFilter ] = useState('')\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAllPersons()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  return (\n    <div className=\"mainContainer\">\n      <Notification message={notificationMessage}/>\n      <Error message={errorMessage}/>\n      <p className=\"phonebookTitle\">Phonebook</p>\n      <Filter filterName={filterName} setFilter={setFilter}/>\n      <h2>Numbers</h2>\n      <Persons persons={persons} setPersons={setPersons} filterName={filterName}/>\n      <h2>Add new contact</h2>\n      <PersonForm persons={persons} setPersons={setPersons} \n                  newName={newName} setNewName={setNewName} \n                  newPhoneNumber={newPhoneNumber} setNewPhoneNumber={setNewPhoneNumber}\n                  setNotificationMessage={setNotificationMessage}\n                  setErrorMessage={setErrorMessage} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}